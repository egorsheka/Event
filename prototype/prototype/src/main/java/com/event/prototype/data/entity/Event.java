package com.event.prototype.data.entity;


import com.event.prototype.data.dto.EventDto;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.Setter;
import lombok.ToString;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.time.LocalDateTime;
import java.util.List;

@Entity
@Table(name = "events")
@Getter
@Setter
@NoArgsConstructor
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
public class Event extends AbstractAutoGeneratedIdEntity {

    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "author_id")
    @NonNull
    private User author;

    @Column(length = 500)
    private String title;

    private String description;

    private String category;

    private LocalDateTime start;

    private LocalDateTime finish;

    @Column(length = 150)
    private String place;

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinColumn(name = "entity_id")
    private List<Picture> picture;

    public Event(EventDto dto){
        //this.author = dto.getAuthor();
        this.title = dto.getTitle();
        this.description = dto.getDescription();
        this.category = dto.getCategory();
        this.start = dto.getStart();
        this.finish = dto.getFinish();
        this.place = dto.getPlace();
    }












}
