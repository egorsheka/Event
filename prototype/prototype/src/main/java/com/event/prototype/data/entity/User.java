package com.event.prototype.data.entity;

import com.event.prototype.data.dto.UserDto;
import com.event.prototype.data.enums.UserRole;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

@Entity
@Table(name = "users", indexes = {
        @Index(columnList = "photo_id")
})

@Getter
@Setter
@NoArgsConstructor
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
public class User extends AbstractAutoGeneratedIdEntity {

    @Id
    @GeneratedValue
    private Long id;
    @Column(unique=true)
    private String email;
    private String password;

    private String name;
    private String surname;

    @Column(name = "role", length = 50)
    @Enumerated(EnumType.STRING)
    private UserRole role;

    @OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinColumn(name = "photo_id")
    private Picture photo;

    private String about;
    private String facebook;
    private String instagram;
    private String telegram;

    public User(UserDto dto){
        email = dto.getEmail();
        password = dto.getPassword();
        name = dto.getName();
        surname = dto.getSurname();
        about = dto.getAbout();
        facebook = dto.getFacebook();
        instagram = dto.getInstagram();
        telegram = dto.getTelegram();
    }

}
